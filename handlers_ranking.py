from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from utils import load_users

async def show_ranking(update: Update, context: ContextTypes.DEFAULT_TYPE):
    users = load_users()

    # SuperBaxa “õ–æ—Å—É
    users["SuperBaxa"] = {
        "name": "üî• SuperBaxa",
        "score": 10000,
        "games_played": 999,
        "last_played": "‚àû"
    }

    sorted_users = sorted(users.items(), key=lambda x: x[1]['score'], reverse=True)
    top_users = sorted_users[:10]

    text = "üèÜ *–¢–æ–ø 10 —Ä–µ–π—Ç–∏–Ω–≥ / –¢–æ–ø 10 —Ä–µ–π—Ç–∏–Ω–≥:*\n\n"
    for i, (user_id, data) in enumerate(top_users, start=1):
        name = data.get("name", f"ID:{user_id}")
        score = data["score"]
        text += f"{i}. {name} ‚Äî {score} “±–ø–∞–π\n"

    # üîô –ê—Ä—Ç“õ–∞ –±–∞—Ç—ã—Ä–º–∞—Å—ã
    keyboard = [[InlineKeyboardButton("üîô –ê—Ä—Ç“õ–∞ / –ù–∞–∑–∞–¥", callback_data="back_to_menu")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    if update.callback_query:
        await update.callback_query.answer()
        current_text = update.callback_query.message.text

        # ‚úÖ –•–∞–±–∞—Ä–ª–∞–º–∞ ”©–∑–≥–µ—Ä–≥–µ–Ω –±–æ–ª—Å–∞ “ì–∞–Ω–∞ edit_text “õ–æ–ª–¥–∞–Ω—É
        if current_text != text:
            await update.callback_query.message.edit_text(
                text, parse_mode="Markdown", reply_markup=reply_markup
            )
    else:
        await update.message.reply_text(text, parse_mode="Markdown", reply_markup=reply_markup)
