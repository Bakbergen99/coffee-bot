import json
import random
import asyncio
from datetime import datetime, timedelta
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes
from utils import load_users, save_users

users = load_users()

# –°“±—Ä–∞“õ—Ç–∞—Ä –∂“Ø–∫—Ç–µ—É
with open("questions_superbaxa.json", "r", encoding="utf-8") as f:
    SUPERBAXA_QUESTIONS = json.load(f)

# 1. –ï—Ä–µ–∂–µ –∫”©—Ä—Å–µ—Ç—É
async def superbaxa_rules(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        await update.callback_query.message.delete()
    except:
        pass

    text = (
    
        "üìú <b>–ï—Ä–µ–∂–µ</b>\n\n"
        "üß† –ë–∞—Ä–ª—ã“ì—ã ‚Äî 10 —Å“±—Ä–∞“õ\n"
        "‚è± ”ò—Ä —Å“±—Ä–∞“õ“õ–∞ –∂–∞—É–∞–ø –±–µ—Ä—É —É–∞“õ—ã—Ç—ã ‚Äî 4 —Å–µ–∫—É–Ω–¥\n"
        "‚ùå 1 —Ä–µ—Ç “õ–∞—Ç–µ –∂—ñ–±–µ—Ä—Å–µ“£ –Ω–µ–º–µ—Å–µ 4 —Å–µ–∫—É–Ω–¥ —ñ—à—ñ–Ω–¥–µ –∂–∞—É–∞–ø –±–µ—Ä–º–µ—Å–µ“£ ‚Äî –∂–µ“£—ñ–ª–µ—Å—ñ“£\n"
        "üèÜ –î“±—Ä—ã—Å –∂–∞—É–∞–ø –±–µ—Ä—ñ–ø, –±–∞—Ä–ª—ã“õ —Å“±—Ä–∞“õ—Ç–∞–Ω ”©—Ç—Å–µ“£: +200 “±–ø–∞–π –∂”ô–Ω–µ [LEGEND] –º”ô—Ä—Ç–µ–±–µ—Å—ñ\n"
        "üíÄ –ñ–µ“£—ñ–ª—Å–µ“£: -100 “±–ø–∞–π –∂”ô–Ω–µ 2 —Å–∞“ì–∞—Ç –±“±–ª —Ä–µ–∂–∏–º–¥—ñ “õ–æ–ª–¥–∞–Ω–∞ –∞–ª–º–∞–π—Å—ã“£\n\n"
        "üìú <b>–ü—Ä–∞–≤–∏–ª–∞</b>\n\n"
        "üß† –í—Å–µ–≥–æ ‚Äî 10 –≤–æ–ø—Ä–æ—Å–æ–≤\n"
        "‚è± –ù–∞ –∫–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å –¥–∞—ë—Ç—Å—è 4 —Å–µ–∫—É–Ω–¥—ã\n"
        "‚ùå 1 –æ—à–∏–±–∫–∞ –∏–ª–∏ –µ—Å–ª–∏ –Ω–µ —É—Å–ø–µ–µ—à—å –∑–∞ 4 —Å–µ–∫—É–Ω–¥—ã ‚Äî –ø–æ—Ä–∞–∂–µ–Ω–∏–µ\n"
        "üèÜ –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç–∏—à—å –Ω–∞ –≤—Å–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ: +200 –±–∞–ª–ª–æ–≤ –∏ —Å—Ç–∞—Ç—É—Å [LEGEND]\n"
        "üíÄ –ï—Å–ª–∏ –ø—Ä–æ–∏–≥—Ä–∞–µ—à—å: -100 –±–∞–ª–ª–æ–≤ –∏ 2 —á–∞—Å–∞ –Ω–µ —Å–º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ—Ç —Ä–µ–∂–∏–º"


)


    keyboard = [
        [InlineKeyboardButton("üöÄ –°—Ç–∞—Ä—Ç", callback_data="start_superbaxa")],
        [InlineKeyboardButton("üîô –ê—Ä—Ç“õ–∞ / –ù–∞–∑–∞–¥", callback_data="main_menu")]
    ]

    await update.effective_chat.send_message(
        text=text,
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode="HTML"
    )

# 2. –û–π—ã–Ω–¥—ã –±–∞—Å—Ç–∞—É
async def start_superbaxa(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = str(update.effective_user.id)

    user = users.get(user_id, {"score": 0})
    if user.get("score", 0) < 500:

        await update.callback_query.answer("‚ùå –ë“±–ª —Ä–µ–∂–∏–º–≥–µ –∫—ñ—Ä—É “Ø—à—ñ–Ω –∫–µ–º—ñ–Ω–¥–µ 500 “±–ø–∞–π “õ–∞–∂–µ—Ç!", show_alert=True)
        return

    try:
        await update.callback_query.message.delete()
    except:
        pass

    users[user_id] = users.get(user_id, {
        "score": 0,
        "games_played": 0,
        "last_played": "",
        "blocked_until": None
    })

    context.user_data["superbaxa"] = {
        "questions": SUPERBAXA_QUESTIONS[:10],  # “õ–∞—Ç–∞—Ä–º–µ–Ω —Å“±—Ä–∞“õ—Ç–∞—Ä
        "current": 0,
        "correct": 0
    }

    await send_superbaxa_question(update, context)

# 3. –°“±—Ä–∞“õ –∂—ñ–±–µ—Ä—É
async def send_superbaxa_question(update: Update, context: ContextTypes.DEFAULT_TYPE):
    data = context.user_data["superbaxa"]
    q = data["questions"][data["current"]]

    keyboard = [
        [InlineKeyboardButton(q["options"][0], callback_data="sb_answer_0")],
        [InlineKeyboardButton(q["options"][1], callback_data="sb_answer_1")],
        [InlineKeyboardButton(q["options"][2], callback_data="sb_answer_2")],
        [InlineKeyboardButton(q["options"][3], callback_data="sb_answer_3")],
    ]

    text = f"üß† SuperBaxa {data['current']+1}/10\n\n<b>{q['question']}</b>"

    msg = await update.effective_chat.send_message(
        text=text,
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode="HTML"
    )

    context.user_data["superbaxa_msg_id"] = msg.message_id
    context.user_data["answered"] = False

    await asyncio.sleep(4)

    if not context.user_data.get("answered"):
        await msg.edit_text("‚è± –£–∞“õ—ã—Ç –±—ñ—Ç—Ç—ñ! / –í—Ä–µ–º—è –≤—ã—à–ª–æ!\n\n‚ùå –°—ñ–∑ “±—Ç—ã–ª–¥—ã“£—ã–∑.")
        await finish_superbaxa_game(update, context, won=False)

# 4. –ñ–∞—É–∞–ø ”©“£–¥–µ—É
async def handle_superbaxa_answer(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    user_id = str(update.effective_user.id)

    data = context.user_data.get("superbaxa")
    if not data:
        return

    selected = int(query.data[-1])
    correct = data["questions"][data["current"]]["correct"]

    context.user_data["answered"] = True

    try:
        await query.message.delete()
    except:
        pass

    if selected == correct:
        data["correct"] += 1
        data["current"] += 1
        if data["current"] >= 10:
            await finish_superbaxa_game(update, context, won=True)
        else:
            await send_superbaxa_question(update, context)
    else:
        await update.effective_chat.send_message("‚ùå “ö–∞—Ç–µ –∂–∞—É–∞–ø! / –ù–µ–≤–µ—Ä–Ω—ã–π –æ—Ç–≤–µ—Ç!")
        await finish_superbaxa_game(update, context, won=False)

# 5. –û–π—ã–Ω –∞—è“õ—Ç–∞—É
async def finish_superbaxa_game(update: Update, context: ContextTypes.DEFAULT_TYPE, won: bool):
    user_id = str(update.effective_user.id)
    user = users.get(user_id, {"score": 0})
    score = user.get("score", 0)

    try:
        msg_id = context.user_data.get("superbaxa_msg_id")
        if msg_id:
            await update.effective_chat.delete_message(msg_id)
    except:
        pass

    if won:
        user["score"] = score + 200
        text = (
            "üèÜ <b>–°—ñ–∑ SuperBaxa —Ä–µ–∂–∏–º—ñ–Ω —Å”ô—Ç—Ç—ñ –∞—è“õ—Ç–∞–¥—ã“£—ã–∑!</b>\n\n"
            "+200 “±–ø–∞–π üéâ\nüî• [LEGEND] –º”ô—Ä—Ç–µ–±–µ—Å—ñ –±–µ—Ä—ñ–ª–¥—ñ!"
        )
    else:
        user["score"] = max(0, score - 100)
        user["blocked_until"] = (datetime.now() + timedelta(hours=2)).strftime("%Y-%m-%d %H:%M:%S")
        text = (
            "üò¢ <b>–°—ñ–∑ SuperBaxa —Ä–µ–∂–∏–º—ñ–Ω–µ–Ω ”©—Ç–µ –∞–ª–º–∞–¥—ã“£—ã–∑</b>\n\n"
            "-100 “±–ø–∞–π\n‚õî 2 —Å–∞“ì–∞—Ç—Ç—ã“õ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞"
        )

    users[user_id] = user
    save_users(users)

    context.user_data.pop("superbaxa", None)
    context.user_data.pop("answered", None)

    keyboard = [
        [InlineKeyboardButton("üîô –ê—Ä—Ç“õ–∞ / –ù–∞–∑–∞–¥", callback_data="main_menu")]
    ]

    await update.effective_chat.send_message(
        text=text,
        reply_markup=InlineKeyboardMarkup(keyboard),
        parse_mode="HTML"
    )
